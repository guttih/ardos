{"name":"ThermoCtrl","description":"Use this control to display temperature.\r\nThis control will display a thermometer which you can \r\nuse to interpret a pins value to a temperature.","code":"\"use strict\";\r\n/*\t\r\n\tUse this control to display temperature.\r\n\tThis control will display a thermometer which you can \r\n\tuse to interpret a pins value to a temperature.\r\n\r\n\tif we call the pin value on the device devicePinValue.\r\n\t\tand we want to be able to set that value directly with the setValue function\r\n\t\tthen you can use the setPinValueRatio function to make the setValue function \r\n\t\talways map the  devicePinValue to the meter value.\r\n\r\n\t\tExample: If the devicePinValue is 1023 and it reprisents the 30째 on the meter\r\n\t\tthen you can set the correct value on the meter by calling:\r\n\t\t\t\tmeter.setPinValueRatio(30/1023);\r\n\t\t\t\tor more general example:\r\n\t\t\t\t\tvar meter = new ThermoPin(0, 0, 1, 0, 30);\r\n\t\t\t\t\tmeter.setPinValueRatio(meter.getHigestValue()/1023);\r\n\t\t\t\t\tmeter.setValue(1023);  //this will put the control to 30째\r\n\t*/\r\nclass ThermoCtrl extends PinControl {\r\n\tconstructor(left, top, pinObject, highestValue){\r\n\t\tvar pinNumber       = pinObject.getNumber();\r\n\t\tvar pinValue        = pinObject.getValue();\r\n\t\tif (highestValue === undefined){\r\n\t\t\thighestValue = pinObject.getHigestValue();\r\n\t\t}\r\n\t\tsuper('thermo-ctrl', left, top, pinNumber, pinValue, highestValue, pinObject.getDeviceID());\r\n\t\tthis.maxheight = 140;\r\n\t\tthis.yStart = 15;\r\n\t\tvar ratio = highestValue / pinObject.getHigestValue();\r\n\t\tthis.setPinValueRatio(ratio);\r\n\t\tthis.setValue(super.getPinValue());\r\n\t\tpinObject.addControl(this);\r\n\t}\r\n\r\n\tgetRect(){ return $('#' + super.getId() + '> svg > .control');}\r\n\tgetText(){ return $('#' + super.getId() + '> svg > .text-value');}\r\n\t\r\n\tsetBarHeight(value,rect){\r\n\t\t/*  set the height of the bar\r\n\t\t\tThis is the value \r\n\t\t\t\t\twhen meter is 100% then line y=15 and height=140\r\n\t\t\t\t\tyStart = 15 ; maxheight = 140  VALFACT = percentage / 10\r\n\t\t\t\t\tformula for height = maxheight - ( maxheight*(1 - VALFACT) )\r\n\t\t\t\t\tformula for y      = maxheight * ( 1 - VALFACT ) + yStart\r\n\t\t\t\t\tcalculation for 30% is \tVALFACT = 30/10 = 0.3 ;  y = 140 * ( 1 - 0.3) + yStart ; height = 140 - ( 140 * (1 - 0.3) ) \r\n\t\t\t\t*/\r\n\t\tvar y=113, height=0;\r\n\t\tvar  VALFACT = value / 100;\r\n\t\t\r\n\t\ty      = this.maxheight * ( 1 - VALFACT ) + this.yStart;\r\n\t\theight = this.maxheight - ( this.maxheight*(1 - VALFACT) );\r\n\t\trect.attr('y',y);\r\n\t\trect.attr('height',height);\r\n\t\t\r\n\t\t\r\n\t}\r\n\tscale(value){\r\n\t\tsuper.scale($('#' + super.getId() + '> svg'), value);\r\n\t}\r\n\trotate(degrees){\r\n\t\tsuper.rotate($('#' + super.getId() + '> svg'), degrees);\r\n\t}\r\n\tactive(bPowerOn){\r\n\t\tvar color = '#cccccc',\r\n\t\t    textColor = '#cccccc';\r\n\t\tif (bPowerOn === true){\r\n\t\t\tcolor = '#E60000';\r\n\t\t\ttextColor = 'yellow';\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tthis.getRect().css({ fill: color });\r\n\t\tthis.getText().css({ fill: textColor });\r\n\t}\r\n\r\n\tsetValue(value){\r\n\t\t//todo: make the selector for rect and text\r\n\t\t//relative to svg.  that is class like\r\n\t\tthis.active(true);\r\n\t\tsuper.setPinValue(value*this.pinValueRatio);\r\n\t\tvar textNumber = this.getText();\r\n\t\ttextNumber.text(Math.round(super.getPinValue()*10)/10+'째');\r\n\t\tvar rect = this.getRect();\r\n\t\tthis.setBarHeight(super.scaleValue(),rect);\r\n\t\t\r\n\t}\r\n\r\n\taddTicks(count){\r\n\t\tvar stepNum = this.getHigestValue() / count;\r\n\t\tvar num,i,y;\r\n\t\t\t\t/*\r\n\t\t\tThis is the value \r\n\t\t\t\t\twhen meter is 100% then line y=15 and height=140\r\n\t\t\t\t\tyStart = 15 ; maxheight = 140  VALFACT = percentage / HIGESTVALUE\r\n\t\t\t\t\tformula for height = maxheight - ( maxheight*(1 - VALFACT) )\r\n\t\t\t\t\tformula for y      = maxheight * ( 1 - VALFACT ) + yStart\r\n\t\t\t\t\tcalculation for 30% is \tVALFACT = 30/10 = 0.3 ;  y = 140 * ( 1 - 0.3) + yStart ; height = 140 - ( 140 * (1 - 0.3) ) \r\n\t\t\t\t*/\r\n\t\tvar  VALFACT;\r\n\r\n\t\tfor(i = 0; i< count+1; i++){\r\n\t\t\tnum = (i * stepNum);\r\n\t\t\tVALFACT = num / (this.getHigestValue());\r\n\t\t\ty      = this.maxheight * ( 1 - (VALFACT) ) + this.yStart;\r\n\t\t\tthis.addTick(y, Math.round(num), i===0);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\taddTick(y, text, first){\r\n\t\tvar svg = document.querySelector('#' + super.getId() + '> svg');\r\n\t\tvar x1 = 20, x2 = 27;\r\n\t\tif (first !== undefined && first === true){x1 = 18; x2=20;}\r\n\r\n\t\tvar ElText= super.makeSVG(\r\n\t\t\t'text', \r\n\t\t\t{x: x1-2, y: y, dy:'.32em', style: 'text-anchor: end; fill: rgb(119, 119, 119); font-size: 10px'});\r\n\r\n\t\tvar line= super.makeSVG(\r\n\t\t\t'line', \r\n\t\t\t{x1:x1, y1:y, x2:x2, y2:y, style: 'stroke:rgb(153,153,153);stroke-width:1.5x'});\r\n\t\t\r\n\t\tsvg.appendChild(line);\r\n\t\tvar textNode = document.createTextNode(text);\r\n\r\n\t\tElText.appendChild(textNode);\r\n\t\tsvg.appendChild(ElText);\r\n\t}\r\n\r\n\tsetPinValueRatio(ratio){\r\n\t\tthis.pinValueRatio = ratio;\r\n\t}\r\n\r\n}//class\r\n","helpurl":"/controls/help/ctrl/ThermoCtrl","template":"<div id=\"thermo-ctrl\" class=\"thermo-ctrl\" style=\"position:absolute\">\r\n\t<svg width=\"80\"  height=\"176\" class=\"control\">\r\n\t<defs>\r\n\t\t<radialGradient id=\"bulbGradient\" cx=\"50%\" cy=\"50%\" r=\"50%\" fx=\"50%\" fy=\"50%\">\r\n\t\t<stop offset=\"0%\" style=\"stop-color: rgb(230, 200, 200);\"></stop>\r\n\t\t<stop offset=\"90%\" style=\"stop-color: rgb(230, 0, 0);\"></stop>\r\n\t\t</radialGradient>\r\n\t</defs>\r\n\t\t<circle r=\"10.75\" cx=\"40\" cy=\"15.75\" style=\"fill: rgb(255, 255, 255); stroke: rgb(153, 153, 153); stroke-width: 1px;\"></circle>\r\n\t\t<rect x=\"29.25\" y=\"15.75\" height=\"139.25\" width=\"21.5\" style=\"shape-rendering: crispEdges; fill: rgb(255, 255, 255); stroke: rgb(153, 153, 153); stroke-width: 1px;\"></rect>\r\n\t\t<circle r=\"10.25\" cx=\"40\" cy=\"15.75\" style=\"fill: rgb(255, 255, 255); stroke: none;\"></circle><!--white to hide glass rectangle-->\r\n\t\t<!--StartOf the glass-->\r\n\t\t<circle r=\"20\" cx=\"40\" cy=\"155\" style=\"fill: rgb(255, 255, 255); stroke: rgb(153, 153, 153); stroke-width: 1px;\"></circle>\r\n\t\t<rect x=\"29.75\" y=\"15.75\" height=\"139.25\" width=\"20.5\" style=\"shape-rendering: crispEdges; fill: rgb(255, 255, 255); stroke: none;\"></rect>\r\n\t\t<rect id=\"theometer-rect\" class=\"control\" x=\"34.25\" y=\"113\" width=\"11.5\" height=\"42\" style=\"shape-rendering: crispEdges; fill: rgb(230, 0, 0);fill-opacity:0.6\"></rect>\r\n\r\n\t\t<circle class=\"thermoCircle\" r=\"14\" cx=\"40\" cy=\"155\" style=\"fill: url(&quot;#bulbGradient&quot;); stroke: rgb(230, 0, 0); stroke-width: 2px;\"></circle>\r\n\t\t<text class=\"text-value\" x=\"50\" y=\"148\" dy=\"1em\" style=\"text-anchor: end; fill: yellow; font-size: 10px;\">0째</text>\r\n\t</svg>\r\n</div> <!--thermo-->"}