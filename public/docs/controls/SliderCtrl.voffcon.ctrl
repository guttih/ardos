{"name":"SliderCtrl","description":"Use this control to change a pins value.\nThe control will show a slider with a small marker wich the user\ncan drag or slide to change the pin's value.","code":"\"use strict\";\r\n/*\r\nUse this control to change a pins value.\r\nThe control will show a slider with a small marker wich the user\r\ncan drag or slide to change the pin's value.\r\n*/\r\nclass SliderCtrl extends PinControl {\r\n\tconstructor(left, top, pinObject, highestValue){\r\n\t\tvar pinNumber = pinObject.getNumber();\r\n\t\tvar pinValue  = pinObject.getValue();\r\n\t\tif (highestValue === undefined){\r\n\t\t\thighestValue = pinObject.getHigestValue();\r\n\t\t}\r\n\t\tsuper('slider-ctrl', left, top, pinNumber, pinValue, highestValue, pinObject.getDeviceID());\r\n\t\tthis.getSlider().attr('max', highestValue);\r\n\t\tthis.setPinValueRatio(1);\r\n\t\tthis.setValue(super.getPinValue());\r\n\t\tthis.registerClick();\r\n\t\t\r\n\t\tpinObject.addControl(this);\r\n\t\tthis.pinObject = pinObject;\r\n\t}\r\n\r\n\tgetSlider(){ return $('#' + super.getId()+ ' > input');}\r\n\t//if bActivate == false then the pin gecomes grayed show that it is inactivated\r\n\tactive(bActivate){\r\n\t\t\r\n\t\tif (bActivate === true){\r\n\t\t\tthis.setValue(super.getPinValue());//this will show the state\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//bActivate is false so let's gray everything\r\n\t\tvar background = '#cccccc';\r\n\r\n\t}\r\n\t\r\n\tsetValue(value){\r\n\t\tsuper.setPinValue(value*this.pinValueRatio);\r\n\t\tthis.getSlider().val(super.getPinValue());\r\n\t}\r\n    setPinValueRatio(ratio){\r\n\t\tthis.pinValueRatio = ratio;\r\n\t}\r\n\tonClick(inData){\r\n\t\tvar pObj = inData.data.that;\r\n\t\t\tpObj.setPinValue(pObj.getSlider().val());\r\n\t\tif (inData.data.callback !== undefined){\r\n\t\t\tinData.data.callback(pObj);\r\n\t\t}\r\n\t}\r\n\r\n\tscale(value){\r\n\t\tsuper.scale(this.getSlider(), value);\r\n\t}\r\n\trotate(degrees){\r\n\t\t//firefox cannot rotated the scaled slider but it can rotate the parent element\r\n\t\tsuper.rotate($('#' + super.getId()), degrees);\r\n\t}\r\n\t\r\n\tregisterClick(callback){\r\n\t\tvar obj = {that:this};\r\n\t\tif (callback !== undefined){\r\n\t\t\tobj['callback'] = callback;\r\n\t\t}\r\n\t\t//todo: slider will not update when set to a new value\r\n\t\tthis.getSlider().on( \"tap mouseup change touchstart\", obj, this.onClick );\r\n\t}\r\n\t\r\n\r\n}//class\r\n\r\n","helpurl":"/docs/controls/SliderCtrl.voffcon.ctrl.html","template":"<div id=\"slider-ctrl\" class=\"slider-ctrl\" style=\"position:absolute\">\r\n\t<input class=\"sliderinput\" type =\"range\" min =\"0\" max=\"255\" step =\"1\" value =\"0\">\r\n</div>"}