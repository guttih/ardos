{"name":"SelectCtrl","description":"Allows the user to select a value from a list and when this value is selected then it is sent to the device\n\nThis control will display a select control which can be used to change a value of a pin.\n\n\n","code":"\"use strict\";\r\n/*\r\nUse this control to change a value of a pin.\r\n\r\nOptions example:\r\n\r\nvar optionArray = {  '0'  : 'Off',\r\n    \t                    '200' : 'low power',\r\n    \t                    '512' : 'half power',\r\n    \t                    '700' : 'more power',\r\n    \t                   '1023' : 'full power'\r\n                          };\r\n\r\n*/\r\n\r\nclass SelectCtrl extends PinControl {\r\n    \r\n\tconstructor(left, top, pinObject, keyValueOptions, highestValue){\r\n\t        \r\n\t\tvar pinNumber = pinObject.getNumber();\r\n\t\tvar pinValue  = pinObject.getValue();\r\n\t\tif (highestValue === undefined){\r\n\t\t\thighestValue = pinObject.getHigestValue();\r\n\t\t}\r\n\t\tsuper('select-ctrl', left, top, pinNumber, pinValue, highestValue, pinObject.getDeviceID());\r\n\r\n\t\tthis.setValue(super.getPinValue());\r\n\t\tpinObject.addControl(this);\r\n\t\tthis.pinObject = pinObject;\r\n\t\tthis.addOptions(keyValueOptions);\r\n\t}\r\n\t\r\n    addOptions(keyValueOptions) {\r\n\r\n        var sel = this.getSelect();\r\n        sel.empty();\r\n        $.each(keyValueOptions, function(key, value) {   \r\n            sel\r\n              .append($('<option>', { value : key })\r\n              .text(value)); \r\n        });\r\n    }\r\n\tgetSelect(){ return $('#' + super.getId() + '> select');}\r\n\tgetValue(){ return \tthis.getSelect().val();}\r\n\t\r\n\t\r\n\t\r\n\tactive(bActivate){\r\n\t    this.getSelect().prop(\"disabled\", !bActivate);\r\n\t}\r\n\t\r\n\tscale(value){\r\n\t\tsuper.scale(this.getSelect(), value);\r\n\t}\r\n\t\r\n\trotate(degrees){\r\n\t\tsuper.rotate(this.getSelect(), degrees);\r\n\t}\r\n\r\n\t\r\n\tsetValue(value){\r\n\t\tsuper.setPinValue(value);\r\n\t\tvar str = value.toString();\r\n\t\tthis.getSelect().val(str);\r\n\t\tthis.active(true);\r\n\t}\r\n\t//register the function to be called when the select ojbect is changed\r\n\tonChange(inData){\r\n\t    \r\n\t\tvar pObj = inData.data.that;\r\n\t\tvar val;\r\n\t\t//get selected option\r\n\t\tval = Number(pObj.getSelect().prop('selectedIndex'));\r\n\t\t\r\n\t\tpObj.setPinValue(val);\r\n\t\tif (inData.data.callback !== undefined){\r\n\t\t    inData.data.callback(pObj);\r\n\t\t}\r\n\t}\r\n\tregisterClick(callback){\r\n\t\tvar obj = {that:this};\r\n\t\tif (callback !== undefined){\r\n\t\t\tobj['callback'] = callback;\r\n\t\t}\r\n\t\tthis.getSelect().on( \"change\", obj, this.onChange );\r\n\t\t\r\n\t}\r\n\r\n}//class\r\n","helpurl":"/controls/help/ctrl/SelectCtrl","template":"<div id=\"select-ctrl\" class=\"select-ctrl\" style=\"position:absolute\">\r\n    <select class=\"form-control\">\r\n      <option value=\"volvo\">Volvo</option>\r\n</select>\r\n</div> <!--select-->"}