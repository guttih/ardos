{"name":"CustomSelectCtrl","description":"Creates a select which will call a custom function when it's user selects a new value","code":"\"use strict\";\r\n/*\r\nUse this control to turn a pin value off or on.\r\nThis control will display a iphone-like switch which\r\nthe user can click on to turn the pin on or off. \r\n*/\r\n\r\nvar CustomSelectCtrlExtender = 0;\r\nclass CustomSelectCtrl extends ControlElement {\r\n\r\n\tconstructor(left, top, optionArr, onSelectChangeCallback){\r\n\t        \r\n\t\tsuper('custom-select-ctrl', ++CustomSelectCtrlExtender, left, top);\r\n\r\n\t\tthis.addOptions(optionArr);\r\n\t\tif (onSelectChangeCallback !== undefined) {\r\n\t\t    var $elm = this.getSelect();\r\n\t\t    \r\n\t\t    $elm.on('change', function (e) {\r\n                //var optionSelected = $(\"option:selected\", this);\r\n                var valueSelected = this.value;\r\n                onSelectChangeCallback(valueSelected, e, this);\r\n            });\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n    addOptions(options){\r\n        var sel = this.getSelect();\r\n        sel.empty();\r\n        $.each(options, function(key, value) {   \r\n            sel\r\n              .append($('<option>', { value : key })\r\n              .text(value)); \r\n        });\r\n    }\r\n\tgetSelect(){ return $('#' + super.getId() + '> select');}\r\n\tgetValue(){ return \tthis.getSelect().val();}\r\n\t\r\n\t\r\n\t\r\n\tactive(bActivate){\r\n\t    // todo: having problems with enabling again. so disabling this function for now\r\n\t    return;    \r\n\t\t/*if (bActivate === true){\r\n\t\t    this.getSelect().css(\"background-color\", '#FF00ED');\r\n\t\t    //this.getSelect().removeAttr('disabled');\r\n\t\t\tthis.setValue(super.getPinValue());//this will show the state\r\n\t\t} else {\r\n\t\t    this.getSelect().css(\"background-color\", '#00FF00');\r\n\t\t    //this.getSelect().attr('disabled', 'disabled');\r\n        }*/\r\n        var domElm = this.getSelect().get(0);\r\n        console.log(\"dom\" + domElm);\r\n        domElm.disabled=!bActivate;\r\n\t}\r\n\t\r\n\tscale(value){\r\n\t\tsuper.scale(this.getSelect(), value);\r\n\t}\r\n\trotate(degrees){\r\n\r\n\t\tsuper.rotate(this.getSelect(), degrees);\r\n\t}\r\n\r\n\t\r\n\tsetValue(value){\r\n\t    console.log(\"setting value to \" + value);\r\n\t\tvar str = value.toString();\r\n\t\tthis.getSelect().val(str);\r\n\t}\r\n\t\r\n\tregisterClick(callback){\r\n\t\tvar obj = {that:this};\r\n\t\tif (callback !== undefined){\r\n\t\t\tobj['callback'] = callback;\r\n\t\t}\r\n\t\tthis.getSelect().on( \"change\", obj, this.onChange );\r\n\t\t\r\n\t}\r\n\r\n}//class\r\n","helpurl":"/docs/controls/CustomSelectCtrl.voffcon.ctrl.html","template":"<div id=\"custom-select-ctrl\" class=\"custom-select-ctrl\" style=\"position:absolute\">\r\n    <select class=\"form-control\">\r\n      <option value=\"volvo\">Volvo</option>\r\n</select>\r\n</div> <!--select-->"}